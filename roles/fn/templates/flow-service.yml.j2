apiVersion: v1
kind: Service
metadata:
  namespace: default
  name: flow-service
  labels:
    app: flow
    role: flow-service
spec:
  ports:
  - port: 8081
    targetPort: 8081
  selector:
    app: flow
    role: flow-service
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  namespace: default
  name: flow-service
spec:
  replicas: 3
  podManagementPolicy: Parallel
  serviceName: flow-service
  template:
    metadata:
      labels:
        app: flow
        role: flow-service
    spec:
      containers:
      - name: flow-service
        image: fnproject/flow
        imagePullPolicy: Always
        command: [ 'sh', '-c' ]
        args:
        - cluster_node_id=$(hostname); export cluster_node_id=${cluster_node_id##*-}; exec /fnproject/flow-service
        ports:
        - containerPort: 8081
        livenessProbe:
          httpGet:
            path: /ping
            port: 8081
          initialDelaySeconds: 3
          periodSeconds: 3
        env:
          - name: LOG_LEVEL
            value: debug
          - name: listen
            value: 0.0.0.0:8081
          - name: cluster_node_prefix
            value: flow-service-
          - name: cluster_shard_count
            value: "20"
          - name: cluster_node_count
            value: "3"
          - name: cluster_node_id
            value: "3"
          - name: MYSQL_DATABASE
            value: flow
          - name: db_url
            value: mysql://root:fnsecretpassword@tcp(mysql:3306)/flow
          - name: DB_URL
            value: mysql://root:fnsecretpassword@tcp(mysql:3306)/flow
          - name: FN_HOST
            value: fn-service
          - name: FN_PORT
            value: "8080"
          - name: API_URL
            value: http://fn-service:8080/r
